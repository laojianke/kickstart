#############################################################################
#-- KickStart auto-install configuration script for CENTOS6.x or RHEL6.x.
#-- Author:  laojianke
#-- GitHub:  https://github.com/laojianke
#-- Email:   laojianke@gmail.com
#-- Note:    This script is free.
#############################################################################
install
cdrom
rootpw 123456
auth  --useshadow  --enablemd5
graphical
firstboot --disable
keyboard us
lang en_US
selinux --enforcing
logging --level=debug
timezone  Asia/Shanghai
firewall --disabled
reboot --eject

%pre
#!/bin/sh
#Automatic partition
DISKTOTAL_BYTE=`fdisk -l|grep -P 'Disk \/dev\/\w+\:' |head -1| awk '{print $5}'`
DISKID=`fdisk -l|grep -P 'Disk \/dev\/\w+:'|head -1|cut -d: -f 1|cut -d/ -f3`
MEMTOTAL_KB=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`
DISK_300G=299439751168
let "DISK_600G=$DISK_300G*2"
let "DISK_1200G=$DISK_300G*4"
let "DISKTOTAL = $DISKTOTAL_BYTE/1024/1024"
let "MEMTOTAL = $MEMTOTAL_KB/1024"
let "SWAP_PART = $MEMTOTAL*16/10"
let "DISK_AVL = $DISKTOTAL-$SWAP_PART-512"
if [ $DISKTOTAL_BYTE -le $DISK_300G ]; then
	let "DATA_PART = $DISK_AVL*30/100"
	let "ROOT_PART = $DISK_AVL*30/100"
elif [ $DISKTOTAL_BYTE -gt $DISK_300G ] && [ $DISKTOTAL_BYTE -le $DISK_600G ]; then
	let "DATA_PART = $DISK_AVL*20/100"
	let "ROOT_PART = $DISK_AVL*30/100"
else
	let "DATA_PART = $DISK_AVL*10/100"
	let "ROOT_PART = $DISK_AVL*30/100"
fi
cat >> /tmp/partition_ks <<EOF_partition
zerombr
bootloader --append="crashkernel=auto rhgb quiet" --location=mbr --driveorder="$DISKID"
clearpart --all --initlabel
part /boot --fstype ext4 --ondisk=$DISKID --size=512
part pv.008002 --size=1 --ondisk=$DISKID --grow
volgroup VolGroup pv.008002
logvol  /  --vgname=VolGroup  --size=$ROOT_PART  --name=LV_root
logvol  swap  --vgname=VolGroup  --size=$SWAP_PART  --name=LV_Swap
logvol  /data  --vgname=VolGroup  --size=$DATA_PART  --name=LV_DB
EOF_partition

##Automatic NIC Default Configuration
NICNAME_DEFAULT="eth0"
IPADDR="192.168.11.8"
GATEWAY="192.168.11.1"
NETMASK="255.255.255.0"
HOSTNAME="MYHOST"

cidr2mask() {
  local i mask=""
  local full_octets=$(($1/8))
  local partial_octet=$(($1%8))

  for ((i=0;i<4;i+=1)); do
    if [ $i -lt $full_octets ]; then
      mask+=255
    elif [ $i -eq $full_octets ]; then
      mask+=$((256 - 2**(8-$partial_octet)))
    else
      mask+=0
    fi  
    test $i -lt 3 && mask+=.
  done

  echo $mask
}

if [ `ifconfig -s|grep -Pv '^Iface|^lo|^virbr' | wc -l` -gt 0 ]; then
	delcare -a NICNAME
	NICNAME=(`ifconfig -s|grep -Pv '^Iface|^lo|^virbr' | cut -f 1 -d ' '`)
fi

if [ `fdisk -l | grep 'Linux LVM' | wc -l` -gt 0 ]; then
	modprobe dm-mod
	vgchange -ay
	ROOT_PART=`lvscan | grep ACTIVE | grep -i root | head -1 | cut -f 2 -d\'`
	mkdir /mnt/sysimage_tmp
	mount $ROOT_PART /mnt/sysimage_tmp
		if [ $? -eq 0 ]; then
		##########get old network infomation#############
		ROOT_PATH="/mnt/sysimage_tmp"
		IPMATCH="^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
		cp $ROOT_PATH/etc/resolv.conf /tmp/old_resolv.conf
		cp $ROOT_PATH/etc/sysconfig/network /tmp/old_network
		cp $ROOT_PATH/etc/hosts /tmp/old_hosts
		HOSTNAME_TMP=`grep -P '^HOSTNAME=' /tmp/old_network | cut -f 2 -d = | sed 's/[\r\n\"]//g'`
		if [ ${#HOSTNAME_TMP} -lt 3 ]; then
			HOSTNAME_TMP=$HOSTNAME
		fi
		echo "network --hostname "$HOSTNAME_TMP > /tmp/network_ks
		IFCFG_OLD=`ls $ROOT_PATH/etc/sysconfig/network-scripts/ifcfg-*|grep -P '\-\w+\d+$'`
		NICNO=0
		for ff in $IFCFG_OLD; do
			if [ -f $ff ]; then
				DEVNAME_TMP=`echo $ff | sed 's/$ROOT_PATH//g' | cut -f 7 -d \/ | cut -f 2 -d -`
				tmpFile="/tmp/old_ifcfg-"$DEVNAME_TMP
				cp $ff $tmpFile
				IPADDR_TMP=`grep -P '^IPADDR=' $tmpFile | cut -f 2 -d '=' | sed 's/[\r\n\"]//g' | grep -P $IPMATCH`
				GATEWAY_TMP=`grep -P '^GATEWAY=' $tmpFile | cut -f 2 -d '=' | sed 's/[\r\n\"]//g' |  grep -P $IPMATCH`
				NETMASK_TMP=`grep -P '^NETMASK=' $tmpFile | cut -f 2 -d '=' | sed 's/[\r\n\"]//g' |  grep -P $IPMATCH`
				NAMESERVER_TMP=`grep -P '^DNS1=' $tmpFile | cut -f 2 -d '=' | sed 's/[\r\n\"]//g' | grep -P $IPMATCH`
				ONBOOT_TMP=`grep -P '^ONBOOT=' $tmpFile | cut -f 2 -d '=' | grep -Pi 'yes|no' | sed 's/[\r\n\"]//g'`
				PREFIX_TMP=`grep -P '^PREFIX=' $tmpFile | cut -f 2 -d '=' | grep -Pi '\d+' | sed 's/[\r\n\"]//g'`
				if [ ${#DEVNAME_TMP} -gt 2 ] && [ ${#IPADDR_TMP} -gt 6 ]; then
					if [ ${#ONBOOT_TMP} -gt 1 ]; then
						NETCFG_CMD="network --bootproto static --device ${NICNAME[$NICNO]} --onboot $ONBOOT_TMP"
					else
						NETCFG_CMD="network --bootproto static --device ${NICNAME[$NICNO]} --onboot yes"
					fi
					if [ ${#NETMASK_TMP} -lt 7 ]; then
						if [ $PREFIX_TMP -gt 8 ]; then
							NETMASK_TMP=`cidr2mask $PREFIX_TMP`
						else
							NETMASK_TMP=255.255.255.0
						fi
					fi
					NETCFG_CMD="$NETCFG_CMD --ip $IPADDR_TMP --netmask $NETMASK_TMP"
					if [ ${#GATEWAY_TMP} -gt 6 ]; then
						NETCFG_CMD="$NETCFG_CMD --gateway $GATEWAY_TMP"
					fi
					if [ ${#NAMESERVER_TMP} -gt 6 ]; then
						NETCFG_CMD="$NETCFG_CMD --nameserver $NAMESERVER_TMP"
					fi
					echo $NETCFG_CMD >> /tmp/network_ks	
				fi
				let "NICNO=$NICNO+1"
			fi
		done
		######################################################
		umount /mnt/sysimage_tmp
		fi
fi

if [ ! -f '/tmp/network_ks' ] || [ `cat /tmp/network_ks |wc -l ` -lt 2 ]; then
	echo "network --bootproto static --device ${NICNAME[0]} --ip $IPADDR --gateway $GATEWAY --netmask $NETMASK --onboot yes --hostname $HOSTNAME" > /tmp/network_ks
fi

%end
%include /tmp/partition_ks
%include /tmp/network_ks

%post --nochroot --log=/mnt/sysimage/root/ks-post.log
#!/bin/sh
IPMATCH="^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
cp /mnt/source/ForAms/octopus /mnt/sysimage/usr/bin/octopus
chmod 777 /mnt/sysimage/usr/bin/octopus
if [ `ls -l /tmp/old_ifcfg-*|wc -l` -gt 0 ]; then
	mv -f /tmp/old_ifcfg-* /mnt/sysimage/etc/sysconfig/network-scripts/
fi
if [ -f '/tmp/old_network' ]; then
	mv -f /tmp/old_network /mnt/sysimage/etc/sysconfig/network
fi
if [ -f '/tmp/old_resolv.conf' ]; then
	mv -f /tmp/old_resolv.conf /mnt/sysimage/etc/resolv.conf
fi
if [ -f '/tmp/old_hosts' ] && [ `grep -vP '^127|^\:\:1' /tmp/old_hosts| grep -P $IPMATCH | wc -l` -gt 0 ]; then
	mv -f /tmp/old_hosts /mnt/sysimage/etc/old_hosts
fi
%end
%post --log=/root/ks-post2.log
#!/bin/sh
#Configure hosts
IPMATCH="^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
if [ -f '/etc/old_hosts' ] && [ `grep -vP '^127|^\:\:1' /etc/old_hosts| grep -P $IPMATCH | wc -l` -gt 0 ]; then
	grep -vP '^127|^\:\:1' /etc/old_hosts | grep -P $IPMATCH >> /etc/hosts
	echo '#use old hosts file' >>/etc/hosts
#	rm -f /etc/old_hosts
else
	HOSTNAME=`grep 'HOSTNAME=' /etc/sysconfig/network | cut -d = -f 2 | sed 's/[\r\n\"]//g'`
	if [ ${#HOSTNAME} -lt 4 ]; then
		HOSTNAME='MYHOST'
	fi
#	NICNAME="eth0"
#	if [ `ifconfig -s|grep -Pv '^Iface|^lo|^virbr' | wc -l` -gt 0 ]; then
#		NICNAME=`ifconfig -s|grep -Pv '^Iface|^lo|^virbr' | head -1 | cut -f 1 -d ' '`
#	fi
	if [ `grep '192.168.11.8' /etc/sysconfig/network-scripts/ifcfg-e*|wc -l` -gt 0 ]; then
		IPADDR='192.168.11.8'
	else
		IPADDR=`grep 'IPADDR=' /etc/sysconfig/network-scripts/ifcfg-e*|head -1|cut -d = -f 2 | sed 's/[\r\n\"]//g' | grep -P $IPMATCH`
	fi
	if [ ${#IPADDR} -gt 6 ]; then
	echo -e $IPADDR'\t\t'$HOSTNAME >> /etc/hosts
	fi
fi

#Config sysctl.conf parameters
cat >> /etc/sysctl.conf << EOF_sysctl

#Add default parameters for my host
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.tcp_synack_retries = 2
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.log_martians = 1
mark.debug /var/adm/messages
EOF_sysctl
#Config Local ENV
echo "#####Configuration For my host#####" > /etc/sysconfig/i18n
cat >> /etc/sysconfig/i18n << EOF_i18n
CMASK=022
LC_COLLATE=en_US.ISO8859-1
LC_CTYPE=en_US.ISO8859-1
LC_MESSAGES=C
LC_MONETARY=en_US.ISO8859-1
LC_NUMERIC=en_US.ISO8859-1
LC_TIME=en_US.ISO8859-1
LANG="en_US.UTF-8"
EOF_i18n
#Config sshd
sed -i -- 's/\#MaxStartups 10:30:100/MaxStartups 200/' /etc/ssh/sshd_config
#defaul disable iptables
service iptables stop
chkconfig iptables off
#config ftp server
setsebool -P ftp_home_dir on
setsebool -P allow_ftpd_anon_write on
setsebool -P allow_ftpd_full_access on
setsebool -P allow_ftpd_use_cifs on
setsebool -P allow_ftpd_use_nfs on
setsebool -P ftpd_use_passive_mode on
setsebool -P httpd_enable_ftp_server on
setsebool -P tftp_anon_write on
chkconfig --add vsftpd
chkconfig  vsftpd on
sed -i -- 's/^root/\#root/' /etc/vsftpd/ftpusers
sed -i -- 's/^root/\#root/' /etc/vsftpd/user_list
#Config telnet server
mv /etc/securetty /etc/securetty.bak
sed -i -- 's/disable/\#disable/' /etc/xinetd.d/telnet
%end

%packages --ignoremissing
@additional-devel
@base
@basic-desktop
@client-mgmt-tools
@core
@debugging
@desktop-debugging
@desktop-platform
@desktop-platform-devel
@development
@directory-client
@eclipse
@emacs
@fonts
@general-desktop
@graphical-admin-tools
@graphics
@input-methods
@internet-browser
@java-platform
@legacy-x
@network-file-system-client
@performance
@perl-runtime
@print-client
@remote-desktop-clients
@server-platform
@server-platform-devel
@server-policy
@technical-writing
@tex
@virtualization
@virtualization-client
@virtualization-platform
@x11
abrt-gui
ant
certmonger
desktop-file-utils
device-mapper-persistent-data
genisoimage
gnome-python2-desktop
gnutls-devel
jpackage-utils
junit
krb5-workstation
libXau-devel
libXinerama-devel
libXmu
libXmu-devel
libXp
libXrandr-devel
libbonobo-devel
libdrm-devel
libgcrypt-devel
libglade2-devel
libgnomeui-devel
libvirt-java
libxslt-devel
mtools
netpbm-progs
oddjob
openmotif
openmotif-devel
pam_krb5
pax
perl-DBD-SQLite
popt-devel
python-dmidecode
rpmdevtools
rpmlint
samba-winbind
sgpio
startup-notification-devel
systemtap-client
wodim
xorg-x11-proto-devel
-abrt-plugin-mailx
-abrt-plugin-sosreport
ftp
vsftpd
tftp
openssh-clients
bc
libaio.i686
ntp
sysstat
redhat-lsb
dejavu-sans-mono-fonts
dejavu-serif-fonts
rsync
glibc.i686
libstdc++.i686
tcl
tcl-devel
telnet
telnet-server
xinetd
nss-softokn-freebl
net-snmp-utils
%end
